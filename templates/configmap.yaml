apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: crypto
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  config.toml: |
    [Node]
    StartupTimeout = "20s"
    ShutdownTimeout = "20s"

    [Core]
    IP = ""
    RPCPort = "26657"
    GRPCPort = "9090"

    [State]
    KeyringAccName = ""
    KeyringBackend = "test"

    [P2P]
    ListenAddresses = ["/ip4/0.0.0.0/udp/{{ .Values.ports.p2p }}/quic-v1/webtransport", "/ip6/::/udp/{{ .Values.ports.p2p }}/quic-v1/webtransport", "/ip4/0.0.0.0/udp/{{ .Values.ports.p2p }}/quic-v1", "/ip6/::/udp/{{ .Values.ports.p2p }}/quic-v1", "/ip4/0.0.0.0/tcp/{{ .Values.ports.p2p }}", "/ip6/::/tcp/{{ .Values.ports.p2p }}"]
    AnnounceAddresses = []
    NoAnnounceAddresses = ["/ip4/127.0.0.1/udp/{{ .Values.ports.p2p }}/quic-v1/webtransport", "/ip4/0.0.0.0/udp/{{ .Values.ports.p2p }}/quic-v1/webtransport", "/ip6/::/udp/{{ .Values.ports.p2p }}/quic-v1/webtransport", "/ip4/0.0.0.0/udp/{{ .Values.ports.p2p }}/quic-v1", "/ip4/127.0.0.1/udp/{{ .Values.ports.p2p }}/quic-v1", "/ip6/::/udp/{{ .Values.ports.p2p }}/quic-v1", "/ip4/0.0.0.0/tcp/{{ .Values.ports.p2p }}", "/ip4/127.0.0.1/tcp/{{ .Values.ports.p2p }}", "/ip6/::/tcp/{{ .Values.ports.p2p }}"]
    MutualPeers = []
    PeerExchange = false
    RoutingTableRefreshPeriod = "1m0s"
    [P2P.ConnManager]
    Low = 50
    High = 100
    GracePeriod = "1m0s"

    [RPC]
    Address = "0.0.0.0"
    Port = "{{ .Values.ports.rpc }}"

    [Gateway]
    Address = "0.0.0.0"
    Port = "26659"
    Enabled = false

    [Share]
    UseShareExchange = true
    [Share.EDSStoreParams]
    GCInterval = "0s"
    RecentBlocksCacheSize = 10
    BlockstoreCacheSize = 128
    [Share.ShrExEDSParams]
    ServerReadTimeout = "5s"
    ServerWriteTimeout = "1m0s"
    HandleRequestTimeout = "1m0s"
    ConcurrencyLimit = 10
    BufferSize = 32768
    [Share.ShrExNDParams]
    ServerReadTimeout = "5s"
    ServerWriteTimeout = "1m0s"
    HandleRequestTimeout = "1m0s"
    ConcurrencyLimit = 10
    [Share.PeerManagerParams]
    PoolValidationTimeout = "2m0s"
    PeerCooldown = "3s"
    GcInterval = "30s"
    EnableBlackListing = false
    [Share.LightAvailability]
    SampleAmount = 16
    [Share.Discovery]
    PeersLimit = 5
    AdvertiseInterval = "1h0m0s"

    [Header]
    TrustedHash = ""
    TrustedPeers = []
    [Header.Store]
    StoreCacheSize = 512
    IndexCacheSize = 2048
    WriteBatchSize = 512
    [Header.Syncer]
    TrustingPeriod = "336h0m0s"
    [Header.Server]
    WriteDeadline = "8s"
    ReadDeadline = "1m0s"
    RangeRequestTimeout = "10s"
    [Header.Client]
    MaxHeadersPerRangeRequest = 64
    RangeRequestTimeout = "8s"

    [DASer]
    SamplingRange = 100
    ConcurrencyLimit = 16
    BackgroundStoreInterval = "10m0s"
    SampleFrom = 1
    SampleTimeout = "2m40s"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "common.names.fullname" . }}-init
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: crypto
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  init-key: |
    #!/bin/sh
    set -e
    set -x
    celestia {{ .Values.nodeType}} init --node.config=/etc/config.toml --p2p.network={{ .Values.p2pNetwork }}
    (find /home/celestia/.celestia-*/keys -type f | xargs chmod 0600) || exit 0