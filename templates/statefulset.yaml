apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: crypto
  {{- if or .Values.celestia.statefulsetAnnotations .Values.commonAnnotations }}
  {{- $annotations := include "common.tplvalues.merge" (dict "values" (list .Values.celestia.statefulsetAnnotations .Values.commonAnnotations) "context" .) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.celestia.replicaCount }}
  podManagementPolicy: {{ .Values.celestia.podManagementPolicy | quote }}
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" (list .Values.celestia.podLabels .Values.commonLabels) "context" .) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: crypto
  serviceName: {{ template "common.names.fullname" . }}
  {{- if .Values.celestia.updateStrategy }}
  updateStrategy: {{- toYaml .Values.celestia.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- if .Values.celestia.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.celestia.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: crypto
    spec:
      hostNetwork: {{ .Values.hostNetwork }}
      serviceAccountName: {{ template "celestia.serviceAccountName" . }}
      {{- include "celestia.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.celestia.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.celestia.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.celestia.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.celestia.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.celestia.podAffinityPreset "component" "crypto" "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.celestia.podAntiAffinityPreset "component" "crypto" "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.celestia.nodeAffinityPreset.type "key" .Values.celestia.nodeAffinityPreset.key "values" .Values.celestia.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.celestia.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.celestia.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.celestia.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.celestia.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.celestia.priorityClassName }}
      priorityClassName: {{ .Values.celestia.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.celestia.schedulerName }}
      schedulerName: {{ .Values.celestia.schedulerName | quote }}
      {{- end }}
      {{- if .Values.celestia.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.celestia.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.celestia.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.celestia.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.celestia.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.celestia.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
        - name: volume-permissions
          image: {{ include "celestia.volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          command:
            - bash
            - "-c"
            - "/usr/bin/init-key"
          {{- if .Values.celestia.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.celestia.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: celestia-data
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
        {{- end }}
        - name: init-key
          image: {{ include "celestia.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          command:
            - bash
            - "/usr/bin/init-key"
          {{- if .Values.celestia.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.celestia.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: celestia-config-init
              mountPath: /usr/bin/init-key
              subPath: init-key
            - name: celestia-config
              mountPath: /etc/config.toml
              subPath: config.toml
            - name: celestia-data
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
        {{- if .Values.celestia.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.celestia.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: celestia
          image: {{ template "celestia.image" . }}
          imagePullPolicy: {{ .Values.celestia.image.pullPolicy }}
          {{- if .Values.celestia.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.celestia.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.celestia.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.celestia.command "context" $) | nindent 12 }}
          {{- else }}
          command:
            - celestia
            - {{ .Values.nodeType }}
            - start
            - --node.config=/etc/config.toml
            - --p2p.network={{ .Values.p2pNetwork }}
            - --log.level={{ .Values.logLevel }}
            - --metrics={{ .Values.metrics.enabled }}
            - --metrics.tls={{ .Values.metrics.tls }}
            - --p2p.metrics={{ .Values.metrics.enabled }}
            - --metrics.endpoint={{ .Values.metrics.openTelemetryEndpoint }}
            - --tracing={{ .Values.tracing.enabled }}
            - --tracing.tls={{ .Values.tracing.tls }}
            - --tracing.endpoint={{ .Values.tracing.endpoint }}
            - --rpc.addr=0.0.0.0
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.celestia.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.celestia.args "context" $) | nindent 12 }}
          {{- else }}
          args: []
          {{- end }}
          env:
            - name: NODE_TYPE
              value: {{ .Values.nodeType }}
            - name: P2P_NETWORK
              value: {{ .Values.p2pNetwork }}
            {{- if .Values.celestia.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.celestia.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.celestia.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.celestia.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.celestia.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.celestia.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.celestia.resources }}
          resources: {{- toYaml .Values.celestia.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: p2pudp
              containerPort: {{ .Values.ports.p2p }}
              protocol: UDP
            - name: "p2p"
              containerPort: {{ .Values.ports.p2p }}
              protocol: TCP
            - name: "rpc"
              containerPort: {{ .Values.ports.rpc }}
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
           {{- end }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.celestia.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.celestia.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.celestia.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.celestia.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.celestia.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.celestia.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.celestia.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.celestia.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.celestia.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.celestia.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.celestia.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.celestia.startupProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.celestia.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.celestia.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: celestia-data
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            - name: celestia-config
              mountPath: /etc/config.toml
              subPath: config.toml
          {{- if .Values.celestia.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.celestia.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.celestia.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.celestia.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: celestia-data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ default (include "common.names.fullname" .) .Values.persistence.existingClaim }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: celestia-config
          configMap:
            {{- if not (empty .Values.celestia.existingConfigmap) }}
            name: {{ .Values.celestia.existingConfigmap }}
            {{- else }}
            name: {{ template "common.names.fullname" . }}
            {{- end }}
        - name: celestia-config-init
          configMap:
            name: {{ template "common.names.fullname" . }}-init
        {{- if .Values.celestia.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.celestia.extraVolumes "context" $) | nindent 8 }}
        {{- end }}